// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopBot;

namespace ShopBot.Migrations
{
    [DbContext(typeof(RST_DBContext))]
    [Migration("20210219024821_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ShopBot.AdminInfo", b =>
                {
                    b.Property<string>("AdminEmail")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Admin_email")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("AdminPosition")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Admin_position")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("AdminEmail")
                        .HasName("PRIMARY");

                    b.ToTable("admin_info");
                });

            modelBuilder.Entity("ShopBot.FailedLogin", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_email")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<int>("FailedNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("failed_num")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("TimeOfTry")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_of_try");

                    b.HasKey("UserEmail")
                        .HasName("PRIMARY");

                    b.ToTable("failed_login");
                });

            modelBuilder.Entity("ShopBot.Schedule", b =>
                {
                    b.Property<int>("ScheduleIdn")
                        .HasColumnType("integer")
                        .HasColumnName("schedule_IDN");

                    b.Property<ulong?>("Archived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasColumnName("archived")
                        .HasDefaultValueSql("b'0'");

                    b.Property<float>("CurrentPrice")
                        .HasColumnType("float")
                        .HasColumnName("current_price");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("date")
                        .HasColumnName("expire_date");

                    b.Property<int?>("Frequency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("frequency")
                        .HasDefaultValueSql("'0'");

                    b.Property<ulong?>("IsRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_recurring")
                        .HasDefaultValueSql("b'0'");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("item")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<int?>("PriceLimit")
                        .HasColumnType("integer")
                        .HasColumnName("price_limit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("url")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_email")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<int?>("WantOption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("want_option")
                        .HasDefaultValueSql("'-1'");

                    b.HasKey("ScheduleIdn")
                        .HasName("PRIMARY");

                    b.ToTable("schedules");
                });

            modelBuilder.Entity("ShopBot.UserLoginInfo", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_email")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<ulong?>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasColumnName("emailVerified")
                        .HasDefaultValueSql("b'0'");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("varchar(65)")
                        .HasColumnName("salt")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("Verify")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasColumnName("verify")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("UserEmail")
                        .HasName("PRIMARY");

                    b.ToTable("user_login_info");
                });
#pragma warning restore 612, 618
        }
    }
}
